{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jmaln\\\\OneDrive\\\\Bureau\\\\myprojfrend\\\\crm-frontend\\\\src\\\\components\\\\login\\\\Login.comp.js\";\nimport React, { useState, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { Container, Row, Form, Col, Button, Spinner, Alert } from 'react-bootstrap';\nimport { loginFail, loginPending, loginSuccess } from './loginSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userLogin } from '../../api/userApi';\nimport { useHistory } from 'react-router-dom';\nimport { getUserProfile } from '../../pages/dashboard/userAction';\nexport const LoginForm = ({\n  formSwitcher\n}) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    isLoading,\n    isAuth,\n    error\n  } = useSelector(state => state.login);\n  useEffect(() => {\n    sessionStorage.getItem('accessJWT') && history.push(\"/dashboard\");\n  }, [history, isAuth]);\n  const [email, setEmail] = useState(\"nefaa03@gmail.com\");\n  const [password, setPassword] = useState(\"password124\");\n\n  const handleOnChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    switch (name) {\n      case \"email\":\n        setEmail(value);\n        break;\n\n      case \"password\":\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    } //console.log(name,value) ; \n\n  };\n\n  const handleOnSubmit = async e => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      return alert('complete all the form  !!!');\n    }\n\n    dispatch(loginPending());\n\n    try {\n      const isAuth = await userLogin({\n        email,\n        password\n      });\n      console.log(isAuth);\n\n      if (isAuth.status === \"error\") {\n        return dispatch(loginFail(isAuth.message));\n      }\n\n      dispatch(loginSuccess());\n      dispatch(getUserProfile());\n      history.push('/dashboard');\n    } catch (error) {\n      dispatch(loginFail(error.message));\n    } //Todo call api to submit the form \n    //console.log(email,password) ; \n\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-info text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }\n  }, \" Client Login \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }\n  }), error && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 20\n    }\n  }, error, \" \"), /*#__PURE__*/React.createElement(Form, {\n    autoComplete: \"off\",\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleOnChange,\n    required: true,\n    placeholder: \"Enter Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    name: \"password\",\n    required: true,\n    value: password,\n    onChange: handleOnChange,\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }\n  }, \" Login \"), isLoading && /*#__PURE__*/React.createElement(Spinner, {\n    variant: \"primary\",\n    animation: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"password-reset\",\n    onClick: () => formSwitcher('reset'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 10\n    }\n  }, \" Forget Password\"))), \"Do you still not have an account\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/Registration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \" Register Now \"));\n};\nLoginForm.propTypes = {\n  formSwitcher: propTypes.func.isRequired\n};","map":{"version":3,"sources":["C:/Users/jmaln/OneDrive/Bureau/myprojfrend/crm-frontend/src/components/login/Login.comp.js"],"names":["React","useState","useEffect","propTypes","Container","Row","Form","Col","Button","Spinner","Alert","loginFail","loginPending","loginSuccess","useDispatch","useSelector","userLogin","useHistory","getUserProfile","LoginForm","formSwitcher","dispatch","history","isLoading","isAuth","error","state","login","sessionStorage","getItem","push","email","setEmail","password","setPassword","handleOnChange","e","name","value","target","handleOnSubmit","preventDefault","alert","console","log","status","message","func","isRequired"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAAwC,OAAxC;AACA,OAAQC,SAAR,MAAuB,YAAvB;AACA,SAAQC,SAAR,EAAoBC,GAApB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,MAAtC,EAA6CC,OAA7C,EAAqDC,KAArD,QAAkE,iBAAlE;AACA,SAAQC,SAAR,EAAkBC,YAAlB,EAA+BC,YAA/B,QAAkD,cAAlD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,cAAR,QAA6B,kCAA7B;AACA,OAAO,MAAMC,SAAS,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAqB;AAE3C,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,OAAO,GAAGL,UAAU,EAA1B;AACD,QAAM;AAACM,IAAAA,SAAD;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,MAA6BV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA9C;AAEAzB,EAAAA,SAAS,CAAE,MAAK;AACZ0B,IAAAA,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAF,IAA0CP,OAAO,CAACQ,IAAR,CAAa,YAAb,CAA1C;AACD,GAFQ,EAEP,CAACR,OAAD,EAASE,MAAT,CAFO,CAAT;AAGC,QAAM,CAACO,KAAD,EAAOC,QAAP,IAAmB/B,QAAQ,CAAC,mBAAD,CAAjC;AACA,QAAM,CAACgC,QAAD,EAAUC,WAAV,IAAyBjC,QAAQ,CAAC,aAAD,CAAvC;;AAEA,QAAMkC,cAAc,GAAGC,CAAC,IAAI;AAC1B,UAAM;AAACC,MAAAA,IAAD;AAAQC,MAAAA;AAAR,QAAgBF,CAAC,CAACG,MAAxB;;AAEA,YAAQF,IAAR;AACE,WAAK,OAAL;AACAL,QAAAA,QAAQ,CAAEM,KAAF,CAAR;AACA;;AAEA,WAAK,UAAL;AACAJ,QAAAA,WAAW,CAAEI,KAAF,CAAX;AACA;;AAEA;AACA;AAVF,KAH0B,CAe3B;;AACE,GAhBH;;AAmBE,QAAME,cAAc,GAAE,MAAOJ,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAI,CAACV,KAAD,IAAU,CAACE,QAAf,EAA0B;AAC1B,aAAQS,KAAK,CAAC,4BAAD,CAAb;AACC;;AACJrB,IAAAA,QAAQ,CAACT,YAAY,EAAb,CAAR;;AAEA,QAAI;AACF,YAAMY,MAAM,GAAG,MAAMR,SAAS,CAAC;AAACe,QAAAA,KAAD;AAAOE,QAAAA;AAAP,OAAD,CAA9B;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYpB,MAAZ;;AACA,UAAGA,MAAM,CAACqB,MAAP,KAAkB,OAArB,EAA8B;AAC7B,eAAQxB,QAAQ,CAACV,SAAS,CAACa,MAAM,CAACsB,OAAR,CAAV,CAAhB;AACA;;AACDzB,MAAAA,QAAQ,CAACR,YAAY,EAAb,CAAR;AACAQ,MAAAA,QAAQ,CAACH,cAAc,EAAf,CAAR;AACAI,MAAAA,OAAO,CAACQ,IAAR,CAAa,YAAb;AAED,KAVD,CAUE,OAAOL,KAAP,EAAc;AACdJ,MAAAA,QAAQ,CAACV,SAAS,CAACc,KAAK,CAACqB,OAAP,CAAV,CAAR;AACD,KAnBmC,CAoBrC;AACA;;AACG,GAtBD;;AA0BF,sBAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGCrB,KAAK,iBAAI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BA,KAA1B,MAHV,eAIA,oBAAC,IAAD;AAAM,IAAA,YAAY,EAAC,KAAnB;AAAyB,IAAA,QAAQ,EAAEe,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,IAAD,CAAM,OAAN;AACA,IAAA,IAAI,EAAC,OADL;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,KAAK,EAAET,KAHP;AAIA,IAAA,QAAQ,EAAEI,cAJV;AAKA,IAAA,QAAQ,MALR;AAMA,IAAA,WAAW,EAAC,aANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAYE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,IAAD,CAAM,OAAN;AACA,IAAA,IAAI,EAAC,UADL;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,QAAQ,MAHR;AAIA,IAAA,KAAK,EAAEF,QAJP;AAKA,IAAA,QAAQ,EAAEE,cALV;AAMA,IAAA,WAAW,EAAC,UANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAZF,eAuBE,oBAAC,MAAD;AAAS,IAAA,IAAI,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAvBF,EAwBGZ,SAAS,iBAAI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,SAAjB;AAA2B,IAAA,SAAS,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBhB,CAJA,eA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BA,CADF,CADH,eAmCG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAG,IAAA,IAAI,EAAC,gBAAR;AAAyB,IAAA,OAAO,EAAG,MAAKH,YAAY,CAAC,OAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CADF,CAnCH,mDA0CI;AAAG,IAAA,IAAI,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1CJ,CALF;AAoDD,CA7GM;AA8GPD,SAAS,CAAChB,SAAV,GAAqB;AACnBiB,EAAAA,YAAY,EAAEjB,SAAS,CAAC4C,IAAV,CAAeC;AADV,CAArB","sourcesContent":["\nimport React , {useState,useEffect}from 'react'\nimport  propTypes from 'prop-types' ;\nimport {Container , Row  , Form, Col, Button,Spinner,Alert } from 'react-bootstrap'\nimport {loginFail,loginPending,loginSuccess} from './loginSlice';\nimport { useDispatch ,useSelector} from 'react-redux';\nimport {userLogin} from '../../api/userApi'\nimport { useHistory } from 'react-router-dom';\nimport {getUserProfile} from '../../pages/dashboard/userAction'\nexport const LoginForm= ({formSwitcher }) => {\n \n  const dispatch = useDispatch()\n  const history = useHistory()\n const {isLoading , isAuth ,error}= useSelector((state) => state.login)\n \n useEffect (()=> { \n   ( sessionStorage.getItem('accessJWT')) && history.push(\"/dashboard\")\n },[history,isAuth])\n  const [email,setEmail] = useState(\"nefaa03@gmail.com\") ; \n  const [password,setPassword] = useState(\"password124\") ;\n\n  const handleOnChange = e => { \n    const {name , value}= e.target ; \n\n    switch (name) { \n      case \"email\" : \n      setEmail (value) ; \n      break ; \n\n      case \"password\" : \n      setPassword (value) ; \n      break ; \n\n      default : \n      break ; \n    }\n   //console.log(name,value) ; \n    }\n    \n\n    const handleOnSubmit= async (e) => { \n      e.preventDefault ()\n      if (!email || !password ) { \n      return  alert('complete all the form  !!!')\n      }\n   dispatch(loginPending()); \n\n   try {\n     const isAuth = await userLogin({email,password})\n     console.log(isAuth)\n     if(isAuth.status === \"error\") { \n      return  dispatch(loginFail(isAuth.message))\n     }\n     dispatch(loginSuccess())\n     dispatch(getUserProfile())\n     history.push('/dashboard')\n     \n   } catch (error) {\n     dispatch(loginFail(error.message))\n   }\n  //Todo call api to submit the form \n  //console.log(email,password) ; \n    } ; \n\n\n\n  return (\n\n\n    \n\n    <Container> \n       <Row> \n         <Col> \n         <h1 className='text-info text-center'> Client Login </h1>\n         <hr/> \n         {error && <Alert variant='danger' >{error} </Alert>}\n         <Form autoComplete='off' onSubmit={handleOnSubmit} > \n           <Form.Group> \n            \n             <Form.Control \n             type='email' \n             name='email'\n             value={email} \n             onChange={handleOnChange}\n             required\n             placeholder='Enter Email'\n              /> \n           </Form.Group>\n           <Form.Group> \n            \n             <Form.Control \n             type='password' \n             name='password' \n             required\n             value={password} \n             onChange={handleOnChange}\n             placeholder='password'\n              /> \n           </Form.Group>\n           <Button  type=\"submit\"> Login </Button>\n           {isLoading && <Spinner variant='primary' animation='border'/>}\n         </Form>\n         <hr/> \n         </Col>\n       </Row>\n       <Row> \n         <Col> \n         <a href=\"password-reset\" onClick={ ()=> formSwitcher('reset')}> Forget Password</a>\n         </Col>\n       </Row>\n\t   \n\t   Do you still not have an account\n        <a href=\"/Registration\"> Register Now </a>\n\t\n    </Container>\n\t\n  )\n}\nLoginForm.propTypes ={  \n  formSwitcher :propTypes.func.isRequired, \n}"]},"metadata":{},"sourceType":"module"}