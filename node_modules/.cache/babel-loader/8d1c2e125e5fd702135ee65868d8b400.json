{"ast":null,"code":"import { otpReqPending, otpReqSuccess, otpReqFail, updatePassSuccess } from \"./passwordSlice\";\nimport { reqPasswordOtp, updateUserPassword } from \"../../api/passwordApi\";\nexport const sendPasswordResetOtp = email => async dispatch => {\n  try {\n    dispatch(otpReqPending());\n    const {\n      status,\n      message\n    } = await reqPasswordOtp(email);\n\n    if (status === \"success\") {\n      return dispatch(otpReqSuccess({\n        message,\n        email\n      }));\n    }\n\n    dispatch(otpReqFail(message));\n  } catch (error) {\n    dispatch(otpReqFail(error.message));\n  }\n};\nexport const updatePassword = frmData => async dispatch => {\n  try {\n    dispatch(otpReqPending());\n    const {\n      status,\n      message\n    } = await updateUserPassword(frmData);\n\n    if (status === \"success\") {\n      return dispatch(updatePassSuccess(message));\n    }\n\n    dispatch(otpReqFail(message));\n  } catch (error) {\n    dispatch(otpReqFail(error.message));\n  }\n};","map":{"version":3,"sources":["C:/Users/jmaln/OneDrive/Bureau/ticket-system/crm-frontend/src/components/password-reset/passwordAction.js"],"names":["otpReqPending","otpReqSuccess","otpReqFail","updatePassSuccess","reqPasswordOtp","updateUserPassword","sendPasswordResetOtp","email","dispatch","status","message","error","updatePassword","frmData"],"mappings":"AAAA,SACCA,aADD,EAECC,aAFD,EAGCC,UAHD,EAICC,iBAJD,QAKO,iBALP;AAOA,SAASC,cAAT,EAAyBC,kBAAzB,QAAmD,uBAAnD;AAEA,OAAO,MAAMC,oBAAoB,GAAGC,KAAK,IAAI,MAAMC,QAAN,IAAkB;AAC9D,MAAI;AACHA,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AAEA,UAAM;AAAES,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,MAAMN,cAAc,CAACG,KAAD,CAAhD;;AAEA,QAAIE,MAAM,KAAK,SAAf,EAA0B;AACzB,aAAOD,QAAQ,CAACP,aAAa,CAAC;AAAES,QAAAA,OAAF;AAAWH,QAAAA;AAAX,OAAD,CAAd,CAAf;AACA;;AAEDC,IAAAA,QAAQ,CAACN,UAAU,CAACQ,OAAD,CAAX,CAAR;AACA,GAVD,CAUE,OAAOC,KAAP,EAAc;AACfH,IAAAA,QAAQ,CAACN,UAAU,CAACS,KAAK,CAACD,OAAP,CAAX,CAAR;AACA;AACD,CAdM;AAgBP,OAAO,MAAME,cAAc,GAAGC,OAAO,IAAI,MAAML,QAAN,IAAkB;AAC1D,MAAI;AACHA,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AAEA,UAAM;AAAES,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,MAAML,kBAAkB,CAACQ,OAAD,CAApD;;AAEA,QAAIJ,MAAM,KAAK,SAAf,EAA0B;AACzB,aAAOD,QAAQ,CAACL,iBAAiB,CAACO,OAAD,CAAlB,CAAf;AACA;;AAEDF,IAAAA,QAAQ,CAACN,UAAU,CAACQ,OAAD,CAAX,CAAR;AACA,GAVD,CAUE,OAAOC,KAAP,EAAc;AACfH,IAAAA,QAAQ,CAACN,UAAU,CAACS,KAAK,CAACD,OAAP,CAAX,CAAR;AACA;AACD,CAdM","sourcesContent":["import {\n\totpReqPending,\n\totpReqSuccess,\n\totpReqFail,\n\tupdatePassSuccess,\n} from \"./passwordSlice\";\n\nimport { reqPasswordOtp, updateUserPassword } from \"../../api/passwordApi\";\n\nexport const sendPasswordResetOtp = email => async dispatch => {\n\ttry {\n\t\tdispatch(otpReqPending());\n\n\t\tconst { status, message } = await reqPasswordOtp(email);\n\n\t\tif (status === \"success\") {\n\t\t\treturn dispatch(otpReqSuccess({ message, email }));\n\t\t}\n\n\t\tdispatch(otpReqFail(message));\n\t} catch (error) {\n\t\tdispatch(otpReqFail(error.message));\n\t}\n};\n\nexport const updatePassword = frmData => async dispatch => {\n\ttry {\n\t\tdispatch(otpReqPending());\n\n\t\tconst { status, message } = await updateUserPassword(frmData);\n\n\t\tif (status === \"success\") {\n\t\t\treturn dispatch(updatePassSuccess(message));\n\t\t}\n\n\t\tdispatch(otpReqFail(message));\n\t} catch (error) {\n\t\tdispatch(otpReqFail(error.message));\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}