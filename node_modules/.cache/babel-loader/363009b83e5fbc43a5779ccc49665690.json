{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jmaln\\\\OneDrive\\\\Bureau\\\\myprojfrend\\\\crm-frontend\\\\src\\\\components\\\\password-reset\\\\PasswordReset.comp.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sendPasswordResetOtp } from \"./passwordAction\";\nimport { LoginForm } from \"../../components/login/Login.comp\";\nimport { Container, Row, Col, Form, Button, Alert, Spinner } from \"react-bootstrap\";\nexport const ResetPassword = ({\n  formSwitcher\n}) => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const {\n    isLoading,\n    status,\n    message\n  } = useSelector(state => state.password);\n\n  const handleOnResetSubmit = e => {\n    e.preventDefault();\n    dispatch(sendPasswordResetOtp(email));\n  };\n\n  const handleOnChange = e => {\n    const {\n      value\n    } = e.target;\n    setEmail(value);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-info text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }), message && /*#__PURE__*/React.createElement(Alert, {\n    variant: status === \"success\" ? \"success\" : \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, message), isLoading && /*#__PURE__*/React.createElement(Spinner, {\n    variant: \"primary\",\n    animation: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    autoComplete: \"off\",\n    onSubmit: handleOnResetSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleOnChange,\n    placeholder: \"Enter Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Reset Password\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }\n  }))));\n};","map":{"version":3,"sources":["C:/Users/jmaln/OneDrive/Bureau/myprojfrend/crm-frontend/src/components/password-reset/PasswordReset.comp.js"],"names":["React","useState","useDispatch","useSelector","sendPasswordResetOtp","LoginForm","Container","Row","Col","Form","Button","Alert","Spinner","ResetPassword","formSwitcher","dispatch","email","setEmail","isLoading","status","message","state","password","handleOnResetSubmit","e","preventDefault","handleOnChange","value","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,SAAT,QAA0B,mCAA1B;AAEA,SACCC,SADD,EAECC,GAFD,EAGCC,GAHD,EAICC,IAJD,EAKCC,MALD,EAMCC,KAND,EAOCC,OAPD,QAQO,iBARP;AAUA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AAChD,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEiB,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,MAAiCjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAAlD;;AAEA,QAAMC,mBAAmB,GAAGC,CAAC,IAAI;AAChCA,IAAAA,CAAC,CAACC,cAAF;AAEAV,IAAAA,QAAQ,CAACX,oBAAoB,CAACY,KAAD,CAArB,CAAR;AACA,GAJD;;AAMA,QAAMU,cAAc,GAAGF,CAAC,IAAI;AAC3B,UAAM;AAAEG,MAAAA;AAAF,QAAYH,CAAC,CAACI,MAApB;AACAX,IAAAA,QAAQ,CAACU,KAAD,CAAR;AACA,GAHD;;AAKA,sBACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAIEP,OAAO,iBACP,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAED,MAAM,KAAK,SAAX,GAAuB,SAAvB,GAAmC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,OADF,CALF,EAUEF,SAAS,iBAAI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,SAAjB;AAA2B,IAAA,SAAS,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVf,eAYC,oBAAC,IAAD;AAAM,IAAA,YAAY,EAAC,KAAnB;AAAyB,IAAA,QAAQ,EAAEK,mBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,eAEC,oBAAC,IAAD,CAAM,OAAN;AACC,IAAA,IAAI,EAAC,OADN;AAEC,IAAA,IAAI,EAAC,OAFN;AAGC,IAAA,KAAK,EAAEP,KAHR;AAIC,IAAA,QAAQ,EAAEU,cAJX;AAKC,IAAA,WAAW,EAAC,aALb;AAMC,IAAA,QAAQ,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,eAiBC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBD,CAZD,eAkCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCD,CADD,CADD,CADD;AA0CA,CA5DM","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sendPasswordResetOtp } from \"./passwordAction\";\nimport { LoginForm } from \"../../components/login/Login.comp\";\n\nimport {\n\tContainer,\n\tRow,\n\tCol,\n\tForm,\n\tButton,\n\tAlert,\n\tSpinner,\n} from \"react-bootstrap\";\n\nexport const ResetPassword = ({formSwitcher}) => {\n\tconst dispatch = useDispatch();\n\n\tconst [email, setEmail] = useState(\"\");\n\n\tconst { isLoading, status, message } = useSelector(state => state.password);\n\n\tconst handleOnResetSubmit = e => {\n\t\te.preventDefault();\n\n\t\tdispatch(sendPasswordResetOtp(email));\n\t};\n\n\tconst handleOnChange = e => {\n\t\tconst { value } = e.target;\n\t\tsetEmail(value);\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h1 className=\"text-info text-center\">Reset Password</h1>\n\t\t\t\t\t<hr />\n\n\t\t\t\t\t{message && (\n\t\t\t\t\t\t<Alert variant={status === \"success\" ? \"success\" : \"danger\"}>\n\t\t\t\t\t\t\t{message}\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\n\n\t\t\t\t\t<Form autoComplete=\"off\" onSubmit={handleOnResetSubmit}>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={handleOnChange}\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Email\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n                        \n\t\t\t\t\t\t  \n\t\t\t\t\t\t\n\t\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t\t<Button type=\"submit\">Reset Password</Button>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t</Form>\n\t\t\t\t\t<hr />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}