{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jmaln\\\\OneDrive\\\\Bureau\\\\myprojfrend\\\\crm-frontend\\\\src\\\\pages\\\\password-reset\\\\PasswordOtpForm.page.js\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Jumbotron } from \"react-bootstrap\";\nimport { ResetPassword } from \"../../components/password-reset/PasswordReset.comp\";\nimport UpdatePasswordForm from \"../../components/password-reset/UpdatePasswordForm.comp\";\nimport \"./passwordOtpForm.style.css\"; //Workflow\n// [x] Create password reset page\n// [] Add request OTP form\n// [] Add redux store with Redux-toolkit to handle the network status\n// [] sent OTP to email from API (API Already created)\n// [] Load form to input OTP and new password\n// [] New password must match confirm password, form validation\n// [] Connect to API Endpoint (API Already created)\n// [] Add reducer through Redux-toolkit to handle the network status and provide the feedback to the user\n// [] Send email, OTP and new password to update the password.\n\nexport const PasswordOtpForm = () => {\n  const {\n    showUpdatePassForm\n  } = useSelector(state => state.password);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"entry-page bg-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    className: \"form-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }, showUpdatePassForm ? /*#__PURE__*/React.createElement(UpdatePasswordForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(ResetPassword, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 52\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }\n  }, \"Login Now\"))));\n};","map":{"version":3,"sources":["C:/Users/jmaln/OneDrive/Bureau/myprojfrend/crm-frontend/src/pages/password-reset/PasswordOtpForm.page.js"],"names":["React","useState","useSelector","Jumbotron","ResetPassword","UpdatePasswordForm","PasswordOtpForm","showUpdatePassForm","state","password"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,aAAT,QAA8B,oDAA9B;AACA,OAAOC,kBAAP,MAA+B,yDAA/B;AACA,OAAO,6BAAP,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAyBL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA1C;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,kBAAkB,gBAAG,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAA4B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhD,eAEC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAG,IAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,CAFD,CADD,CADD;AAUA,CAbM","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Jumbotron } from \"react-bootstrap\";\nimport { ResetPassword } from \"../../components/password-reset/PasswordReset.comp\";\nimport UpdatePasswordForm from \"../../components/password-reset/UpdatePasswordForm.comp\";\nimport \"./passwordOtpForm.style.css\";\n\n//Workflow\n\n// [x] Create password reset page\n// [] Add request OTP form\n// [] Add redux store with Redux-toolkit to handle the network status\n// [] sent OTP to email from API (API Already created)\n// [] Load form to input OTP and new password\n// [] New password must match confirm password, form validation\n// [] Connect to API Endpoint (API Already created)\n// [] Add reducer through Redux-toolkit to handle the network status and provide the feedback to the user\n// [] Send email, OTP and new password to update the password.\n\nexport const PasswordOtpForm = () => {\n\tconst { showUpdatePassForm } = useSelector(state => state.password);\n\n\treturn (\n\t\t<div className=\"entry-page bg-info\">\n\t\t\t<Jumbotron className=\"form-box\">\n\t\t\t\t{showUpdatePassForm ? <UpdatePasswordForm /> : <ResetPassword />}\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<a href=\"/\">Login Now</a>\n\t\t\t\t</div>\n\t\t\t</Jumbotron>\n\t\t</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}