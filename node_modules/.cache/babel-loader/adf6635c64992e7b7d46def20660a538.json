{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jmaln\\\\OneDrive\\\\Bureau\\\\myprojfrend\\\\crm-frontend\\\\src\\\\pages\\\\entry\\\\Entry.page.js\";\nimport React, { useState } from \"react\";\nimport { Jumbotron, Col } from \"react-bootstrap\";\nimport { LoginForm } from \"../../components/login/Login.comp\";\nimport { ResetPassword } from \"../../components/password-reset/PasswordReset.comp\";\nimport RegistrationForm from \"../../components/registration-form/RegistrationForm.comp\";\nimport \"./entry.style.css\"; //Workflow\n// [] Create password reset page\n// [] Add request OTP form\n// [] Add redux store with Redux-toolkit to handle the network status\n// [] sent OTP to email from API (API Already created)\n// [] Load form to input OTP and new password\n// [] New password must match confirm password, form validation\n// [] Connect to API Endpoint (API Already created)\n// [] Add reducer through Redux-toolkit to handle the network status and provide the feedback to the user\n// [] Send email, OTP and new password to update the password.\n\nexport const Entry = () => {\n  const [frmLoad, setFrmLoad] = useState(\"login\");\n\n  const handleOnResetSubmit = e => {\n    e.preventDefault();\n  };\n\n  const formSwitcher = frmType => {\n    setFrmLoad(frmType);\n  };\n  /*\tconst formwSW = frmtype => {\n  \t\tsetFrmload(frmtype);\n  \t\t\n  \t}; */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"entry-page bg-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    className: \"form-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, frmLoad === \"login\" && /*#__PURE__*/React.createElement(LoginForm, {\n    formSwitcher: formSwitcher,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }), frmLoad === \"reset\" && /*#__PURE__*/React.createElement(ResetPassword // handleOnChange={handleOnChange}\n  , {\n    handleOnResetSubmit: handleOnResetSubmit,\n    formSwitcher: formSwitcher // email={email}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }\n  }), frmLoad === \"registration\" && /*#__PURE__*/React.createElement(RegistrationForm, {\n    handleOnResetSubmit: handleOnResetSubmit,\n    formSwitcher: formSwitcher,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    className: \"admn-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 14\n    }\n  }, \"Login Admin \"))));\n};","map":{"version":3,"sources":["C:/Users/jmaln/OneDrive/Bureau/myprojfrend/crm-frontend/src/pages/entry/Entry.page.js"],"names":["React","useState","Jumbotron","Col","LoginForm","ResetPassword","RegistrationForm","Entry","frmLoad","setFrmLoad","handleOnResetSubmit","e","preventDefault","formSwitcher","frmType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,EAAoBC,GAApB,QAA8B,iBAA9B;AACA,SAASC,SAAT,QAA0B,mCAA1B;AACA,SAASC,aAAT,QAA8B,oDAA9B;AACA,OAAOC,gBAAP,MAA6B,0DAA7B;AACA,OAAO,mBAAP,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,OAAD,CAAtC;;AACA,QAAMS,mBAAmB,GAAGC,CAAC,IAAI;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,GAFD;;AAIA,QAAMC,YAAY,GAAGC,OAAO,IAAI;AAC/BL,IAAAA,UAAU,CAACK,OAAD,CAAV;AAEA,GAHD;AAKD;;;;;;AAMC,sBACC;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEN,OAAO,KAAK,OAAZ,iBAAuB,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEK,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzB,EAGEL,OAAO,KAAK,OAAZ,iBACA,oBAAC,aAAD,CACC;AADD;AAEC,IAAA,mBAAmB,EAAEE,mBAFtB;AAGC,IAAA,YAAY,EAAEG,YAHf,CAIC;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAWGL,OAAO,KAAI,cAAX,iBACD,oBAAC,gBAAD;AACE,IAAA,mBAAmB,EAAEE,mBADvB;AAEE,IAAA,YAAY,EAAGG,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAsBD,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACW;AAAG,IAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADX,CAtBC,CADD,CADD;AAmCA,CApDM","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Jumbotron ,Col} from \"react-bootstrap\";\nimport { LoginForm } from \"../../components/login/Login.comp\";\nimport { ResetPassword } from \"../../components/password-reset/PasswordReset.comp\";\nimport RegistrationForm from \"../../components/registration-form/RegistrationForm.comp\";\nimport \"./entry.style.css\";\n\n//Workflow\n\n// [] Create password reset page\n// [] Add request OTP form\n// [] Add redux store with Redux-toolkit to handle the network status\n// [] sent OTP to email from API (API Already created)\n// [] Load form to input OTP and new password\n// [] New password must match confirm password, form validation\n// [] Connect to API Endpoint (API Already created)\n// [] Add reducer through Redux-toolkit to handle the network status and provide the feedback to the user\n// [] Send email, OTP and new password to update the password.\n\nexport const Entry = () => {\n\tconst [frmLoad, setFrmLoad] = useState(\"login\");\n\tconst handleOnResetSubmit = e => {\n\t\te.preventDefault();\n\t};\n\n\tconst formSwitcher = frmType => {\n\t\tsetFrmLoad(frmType);\n\t\t\n\t};\n\n/*\tconst formwSW = frmtype => {\n\t\tsetFrmload(frmtype);\n\t\t\n\t}; */\n\n\n\treturn (\n\t\t<div className=\"entry-page bg-info\">\n\t\t\t<Jumbotron className=\"form-box\">\n\t\t\t\t{frmLoad === \"login\" && <LoginForm formSwitcher={formSwitcher} />}\n\n\t\t\t\t{frmLoad === \"reset\" && (\n\t\t\t\t\t<ResetPassword\n\t\t\t\t\t\t// handleOnChange={handleOnChange}\n\t\t\t\t\t\thandleOnResetSubmit={handleOnResetSubmit}\n\t\t\t\t\t\tformSwitcher={formSwitcher}\n\t\t\t\t\t\t// email={email}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t\t{frmLoad ===\"registration\" && (\n\t\t\t\t\t<RegistrationForm\n\t\t\t\t\t  handleOnResetSubmit={handleOnResetSubmit}\n\t\t\t\t\t  formSwitcher ={formSwitcher}\n\t\t\t\t\t />\n\n\t\t\t\t\t\n\n                 )}\n\t\t\n\n\t\t<Col className=\"admn-link\">\n             <a href=\"/admin\">Login Admin </a>\n           </Col>\n\t\t\t</Jumbotron>\n\t\t\t\n\t\t\t\n\t\t\n        \n      \n\t\t</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}