{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoading: false,\n  isAuth: false,\n  error: ''\n};\nconst loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    loginPending: state => {\n      state.isLoading = true;\n    },\n    loginSuccess: state => {\n      state.isLoading = false;\n      state.isAuth = true;\n      state.error = '';\n    },\n    loginFail: (state, {\n      payload\n    }) => {\n      state.isLoading = false;\n      state.error = payload;\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = loginSlice;\nexport const {\n  loginFail,\n  loginPending,\n  loginSuccess\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["C:/Users/jmaln/OneDrive/Bureau/myprojfrend/crm-frontend/src/components/login/loginSlice.js"],"names":["createSlice","initialState","isLoading","isAuth","error","loginSlice","name","reducers","loginPending","state","loginSuccess","loginFail","payload","reducer","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,YAAY,GAAI;AAClBC,EAAAA,SAAS,EAAG,KADM;AAElBC,EAAAA,MAAM,EAAG,KAFS;AAGlBC,EAAAA,KAAK,EAAG;AAHU,CAAtB;AAME,MAAMC,UAAU,GAAGL,WAAW,CAAE;AAC9BM,EAAAA,IAAI,EAAC,OADyB;AAE9BL,EAAAA,YAF8B;AAG9BM,EAAAA,QAAQ,EAAG;AACPC,IAAAA,YAAY,EAAIC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACP,SAAN,GAAiB,IAAjB;AAEH,KAJM;AAKPQ,IAAAA,YAAY,EAAID,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACP,SAAN,GAAiB,KAAjB;AACAO,MAAAA,KAAK,CAACN,MAAN,GAAe,IAAf;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAc,EAAd;AAEH,KAVM;AAWPO,IAAAA,SAAS,EAAG,CAACF,KAAD,EAAO;AAACG,MAAAA;AAAD,KAAP,KAAqB;AAC7BH,MAAAA,KAAK,CAACP,SAAN,GAAiB,KAAjB;AACAO,MAAAA,KAAK,CAACL,KAAN,GAAcQ,OAAd;AAEH;AAfM;AAHmB,CAAF,CAA9B;AAsBF,MAAM;AAACC,EAAAA,OAAD;AAAWC,EAAAA;AAAX,IAAuBT,UAA7B;AAEA,OAAO,MAAM;AAACM,EAAAA,SAAD;AAAWH,EAAAA,YAAX;AAAwBE,EAAAA;AAAxB,IAAwCI,OAA9C;AACP,eAAeD,OAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst initialState  = { \n    isLoading : false , \n    isAuth : false , \n    error : ''\n\n}\n  const loginSlice = createSlice ({ \n    name:'login' , \n    initialState , \n    reducers : { \n        loginPending : (state) => {\n            state.isLoading =true \n\n        } ,\n        loginSuccess : (state) => {\n            state.isLoading =false \n            state.isAuth = true \n            state.error = '' \n\n        } ,\n        loginFail : (state,{payload}) => {\n            state.isLoading =false \n            state.error = payload\n\n        } ,\n    }\n})\n\nconst {reducer , actions } = loginSlice \n\nexport const {loginFail,loginPending,loginSuccess} = actions\nexport default reducer ; "]},"metadata":{},"sourceType":"module"}