{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jmaln\\\\OneDrive\\\\Bureau\\\\ticket-system\\\\crm-frontend\\\\src\\\\pages\\\\ticket\\\\Ticket.page.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col, Button, Spinner, Alert } from \"react-bootstrap\";\nimport { PageBreadcrumb } from \"../../components/breadcrumb/Breadcrumb.comp\";\nimport { MessageHistory } from \"../../components/message-history/MessageHistory.comp\";\nimport { UpdateTicket } from \"../../components/update-ticket/UpdateTicket.comp\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchSingleTicket, closeTicket } from \"../ticket-list/ticketsAction\";\nimport { resetResponseMsg } from \"../ticket-list/ticketsSlice\";\nexport const Ticket = () => {\n  const {\n    tId\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    isLoading,\n    error,\n    selectedTicket,\n    replyMsg,\n    replyTicketError\n  } = useSelector(state => state.tickets);\n  useEffect(() => {\n    dispatch(fetchSingleTicket(tId));\n    return () => {\n      (replyMsg || replyTicketError) && dispatch(resetResponseMsg());\n    };\n  }, [tId, dispatch, replyMsg, replyTicketError]);\n\n  if (selectedTicket.status === \"closed\") {\n    UpdateTicket == disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageBreadcrumb, {\n    page: \"Ticket\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(Spinner, {\n    variant: \"primary\",\n    animation: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 20\n    }\n  }), error && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }\n  }, error), replyTicketError && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, replyTicketError), replyMsg && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, replyMsg))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"text-weight-bolder text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subject\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }, \"Subject: \", selectedTicket.subject), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }\n  }, \"Ticket Opened:\", \" \", selectedTicket.openAt && new Date(selectedTicket.openAt).toLocaleString()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  }, \"Status: \", selectedTicket.status)), /*#__PURE__*/React.createElement(Col, {\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-info\",\n    onClick: () => dispatch(closeTicket(tId)),\n    disabled: selectedTicket.status === \"Closed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }, \"Close Ticket\"))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, selectedTicket.conversations && /*#__PURE__*/React.createElement(MessageHistory, {\n    msg: selectedTicket.conversations,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UpdateTicket, {\n    _id: tId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 6\n    }\n  }))));\n};","map":{"version":3,"sources":["C:/Users/jmaln/OneDrive/Bureau/ticket-system/crm-frontend/src/pages/ticket/Ticket.page.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Container","Row","Col","Button","Spinner","Alert","PageBreadcrumb","MessageHistory","UpdateTicket","useParams","fetchSingleTicket","closeTicket","resetResponseMsg","Ticket","tId","dispatch","isLoading","error","selectedTicket","replyMsg","replyTicketError","state","tickets","status","disabled","subject","openAt","Date","toLocaleString","conversations"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col, Button, Spinner, Alert } from \"react-bootstrap\";\nimport { PageBreadcrumb } from \"../../components/breadcrumb/Breadcrumb.comp\";\nimport { MessageHistory } from \"../../components/message-history/MessageHistory.comp\";\nimport { UpdateTicket } from \"../../components/update-ticket/UpdateTicket.comp\";\nimport { useParams } from \"react-router-dom\";\n\nimport { fetchSingleTicket, closeTicket } from \"../ticket-list/ticketsAction\";\nimport { resetResponseMsg } from \"../ticket-list/ticketsSlice\";\n\nexport const Ticket = () => {\n\tconst { tId } = useParams();\n\tconst dispatch = useDispatch();\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tselectedTicket,\n\t\treplyMsg,\n\t\treplyTicketError,\n\t} = useSelector(state => state.tickets);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchSingleTicket(tId));\n\n\t\treturn () => {\n\t\t\t(replyMsg || replyTicketError) && dispatch(resetResponseMsg());\n\t\t};\n\t}, [tId, dispatch, replyMsg, replyTicketError]);\n\tif (selectedTicket.status===\"closed\") { \n\t\tUpdateTicket == disabled \n\t}\n    \n\treturn (\n\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<PageBreadcrumb page=\"Ticket\" />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t{isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\n\t\t\t\t\t{error && <Alert variant=\"danger\">{error}</Alert>}\n\t\t\t\t\t{replyTicketError && (\n\t\t\t\t\t\t<Alert variant=\"danger\">{replyTicketError}</Alert>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{replyMsg && <Alert variant=\"success\">{replyMsg}</Alert>}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col className=\"text-weight-bolder text-secondary\">\n\t\t\t\t\t<div className=\"subject\">Subject: {selectedTicket.subject}</div>\n\t\t\t\t\t<div className=\"date\">\n\t\t\t\t\t\tTicket Opened:{\" \"}\n\t\t\t\t\t\t{selectedTicket.openAt &&\n\t\t\t\t\t\t\tnew Date(selectedTicket.openAt).toLocaleString()}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"status\">Status: {selectedTicket.status}</div>\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"text-right\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline-info\"\n\t\t\t\t\t\tonClick={() => dispatch(closeTicket(tId))}\n\t\t\t\t\t\tdisabled={selectedTicket.status === \"Closed\"}\n\t\t\t\t\t>\n\t\t\t\t\t\tClose Ticket\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"mt-4\">\n\t\t\t\t<Col>\n\t\t\t\t\t{selectedTicket.conversations && (\n\t\t\t\t\t\t<MessageHistory msg={selectedTicket.conversations} />\n\t\t\t\t\t)}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<hr />\n\n\t\t\t<Row className=\"mt-4\">\n\t\t\t\t<Col>\n\t\t\t\t\t<UpdateTicket _id={tId} />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}